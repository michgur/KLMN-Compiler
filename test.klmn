int a = 1; int b = 2;
public void main(string[] args) {
    print 1 + 3 * (1 - 2) / -1;
}

#
# Compiler Structure:
#   Grammar is composed of Symbols (Terminals & non-Terminals), and their productions.
#   Tokenizer splits source code into Tokens. Each Token is associated with a corresponding Terminal Symbol.
#   ASTFactory defines behavior for all Symbol productions.
#   Parser takes Grammar & Factory, generates an AST.
#   The AST nodes can contain specific instructions for code generation (defined in the ASTFactory).
#
