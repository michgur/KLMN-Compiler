public float max(float a, float b) {
    if (a > b) return a;
    return b;
}

# until I implement type checking properly, only use floats (vars & literals)
public void main(shit args) {
    for (float i = 0f; i < 50000f; i++) {
        if (i == max(i, 3f)) return;
        print i;
    }
}

#
# Compiler Structure:
#   Grammar is composed of Symbols (Terminals & non-Terminals), and their productions.
#   Tokenizer splits source code into Tokens. Each Token is associated with a corresponding Terminal Symbol.
#   ASTFactory defines behavior for all Symbol productions.
#   Parser takes Grammar & Factory, generates an AST.
#   The AST nodes can contain specific instructions for code generation (defined in the ASTFactory).
#
